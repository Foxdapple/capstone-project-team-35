{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\capstone-project-team-35\\\\src\\\\components\\\\image_upload\\\\Image_upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport './image_upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image_upload = () => {\n  _s();\n  // flask intergration starts\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const input_form = useRef();\n  const handleImageChange = event => {\n    setSelectedImage(event.target.files[0]);\n    //input_form.current.submit();\n  };\n\n  const handleFormSubmit = async event => {\n    console.log('Hello');\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    try {\n      await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadStatus('Image uploaded successfully!');\n      setSelectedImage(null);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setUploadStatus('Error uploading image: ' + error.message);\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('/get_images');\n      setUploadedImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  // flask intergration ends\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image_upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circlier_number\",\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      ref: input_form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"images/*\",\n        onChange: handleImageChange,\n        name: \"image_input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Images:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedImages.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Image_upload, \"J4RQlkyVKgx0epI4OrTu1gQHs1k=\");\n_c = Image_upload;\nexport default Image_upload;\nvar _c;\n$RefreshReg$(_c, \"Image_upload\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Image_upload","_s","selectedImage","setSelectedImage","uploadedImages","setUploadedImages","uploadStatus","setUploadStatus","input_form","handleImageChange","event","target","files","handleFormSubmit","console","log","preventDefault","formData","FormData","append","post","headers","error","message","fetchImages","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","type","multiple","accept","onChange","name","map","imagePath","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/GGPC/OneDrive/Documents/GitHub/capstone-project-team-35/src/components/image_upload/Image_upload.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from \"axios\";\r\nimport './image_upload.css'\r\n\r\nconst Image_upload = () => {\r\n  \r\n  // flask intergration starts\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const input_form = useRef();\r\n\r\n  const handleImageChange = (event) => {\r\n    setSelectedImage(event.target.files[0]);\r\n    //input_form.current.submit();\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    console.log('Hello')\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', selectedImage);\r\n\r\n    try {\r\n      await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setUploadStatus('Image uploaded successfully!');\r\n      setSelectedImage(null);\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      setUploadStatus('Error uploading image: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await axios.get('/get_images');\r\n      setUploadedImages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n  // flask intergration ends\r\n\r\n  return (\r\n    <div className='image_upload'>\r\n      <div className='circlier_number'>2</div>\r\n      \r\n      <form onSubmit={handleFormSubmit} ref={input_form}>\r\n        <input type=\"file\" multiple accept='images/*' onChange={handleImageChange} name='image_input'/>\r\n        <button type=\"submit\">Upload Image</button>\r\n      </form>\r\n\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n\r\n      <h2>Uploaded Images:</h2>\r\n      <ul>\r\n        {uploadedImages.map((imagePath, index) => (\r\n          <li key={index}><img src={imagePath} alt={`Image ${index}`} /></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image_upload\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}