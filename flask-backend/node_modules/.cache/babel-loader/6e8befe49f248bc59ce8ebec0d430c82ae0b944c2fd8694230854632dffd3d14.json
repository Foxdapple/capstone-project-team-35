{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\capstone-project-team-35\\\\src\\\\components\\\\image_upload\\\\Image_upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './image_upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleImageChange = event => {\n    const filesArray = Array.from(event.target.files);\n    setSelectedImages(filesArray);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    for (const image of selectedImages) {\n      formData.append('images', image);\n    }\n    try {\n      await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadStatus('Images uploaded successfully!');\n      setSelectedImages([]); // Clear selected images\n      fetchImages(); // Fetch the newly uploaded images\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      setUploadStatus('Error uploading images: ' + error.message);\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('/get_images');\n      setUploadedImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image_upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circlier_number\",\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleImageChange,\n        name: \"image_input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Images:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedImages.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"gfRCn+35Y3sDfwqUvNDkUSb/65A=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageUpload","_s","selectedImages","setSelectedImages","uploadedImages","setUploadedImages","uploadStatus","setUploadStatus","handleImageChange","event","filesArray","Array","from","target","files","handleFormSubmit","preventDefault","formData","FormData","image","append","post","headers","fetchImages","error","console","message","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","multiple","onChange","name","map","imagePath","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/GGPC/OneDrive/Documents/GitHub/capstone-project-team-35/src/components/image_upload/Image_upload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './image_upload.css';\r\n\r\nconst ImageUpload = () => {\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const handleImageChange = (event) => {\r\n    const filesArray = Array.from(event.target.files);\r\n    setSelectedImages(filesArray);\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    for (const image of selectedImages) {\r\n      formData.append('images', image);\r\n    }\r\n\r\n    try {\r\n      await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setUploadStatus('Images uploaded successfully!');\r\n      setSelectedImages([]); // Clear selected images\r\n      fetchImages(); // Fetch the newly uploaded images\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      setUploadStatus('Error uploading images: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await axios.get('/get_images');\r\n      setUploadedImages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='image_upload'>\r\n      <div className='circlier_number'>2</div>\r\n      \r\n      <form onSubmit={handleFormSubmit}>\r\n        <input type='file' multiple onChange={handleImageChange} name='image_input' />\r\n        <button type='submit'>Upload Images</button>\r\n      </form>\r\n\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n\r\n      <h2>Uploaded Images:</h2>\r\n      <ul>\r\n        {uploadedImages.map((imagePath, index) => (\r\n          <li key={index}><img src={imagePath} alt={`Image ${index}`} /></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}